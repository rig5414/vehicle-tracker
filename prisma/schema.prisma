// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Set this in Vercel environment variables
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  videos        Video[]
}

model Video {
  id            String    @id @default(cuid())
  title         String
  description   String?
  fileUrl       String
  thumbnailUrl  String?
  status        VideoStatus @default(PENDING)
  uploadedBy    User      @relation(fields: [userId], references: [id])
  userId        String
  location      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  plateSightings PlateSighting[]
  processingJob ProcessingJob?
}

model PlateSighting {
  id            String    @id @default(cuid())
  plateNumber   String
  confidence    Float
  timestamp     DateTime
  location      String?
  latitude      Float?
  longitude     Float?
  imageUrl      String?
  video         Video     @relation(fields: [videoId], references: [id])
  videoId       String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model ProcessingJob {
  id            String    @id @default(cuid())
  status        JobStatus @default(PENDING)
  progress      Int       @default(0)
  startTime     DateTime?
  endTime       DateTime?
  error         String?
  video         Video     @relation(fields: [videoId], references: [id])
  videoId       String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum VideoStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

enum JobStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}
